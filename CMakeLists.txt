cmake_minimum_required(VERSION 3.7.0)
project(Gui VERSION 1.0.0 LANGUAGES CXX)

# Add gui.cpp file of the project root directory as a source file
set(SOURCE_DIR ".")
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DVK_PROTOTYPES")
set(CMAKE_C_STANDARD 17)
set(CMAKE_C_STANDARD_REQUIRED ON)
set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DVK_PROTOTYPES")
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON CACHE INTERNAL "")
set(CMAKE_CXX_LINK_WHAT_YOU_USE_FLAGS ON)
set(Vulkan_GLSLC_EXECUTABLE "/usr/bin/glslang")
option(GLFW_BUILD_EXAMPLES "Build the GLFW example programs" OFF)
option(GLFW_BUILD_TESTS "Build the GLFW test programs" OFF)
option(GLFW_BUILD_DOCS "Build the GLFW documentation" OFF)
option(GLFW_INSTALL "Generate installation target" OFF)
option(GLFW_DOCUMENT_INTERNALS "Include internals in documentation" OFF)
# Add library target with source files listed in SOURCE_FILES variable
add_executable(Example "examples/example_sdl2_opengl3/main.cpp")
add_library(Gui "gui.cpp" "gui.hpp" "draw.cpp" "tables.cpp" "widgets.cpp" "demo.cpp" "backends/sdl2.cpp" "backends/opengl3.cpp" "backends/sdl2.hpp" "backends/opengl3.hpp" "backends/opengl3_loader.hpp" "include/internal.hpp" "include/rectpack.hpp" "include/textedit.hpp" "include/truetype.hpp")
find_package(OpenGL REQUIRED GLX OpenGL)
find_package(SDL2 REQUIRED SDL2)
set(LIBRARIES "glfw3;OpenGL:GL;SDL2::SDL2")
include_directories(${libGLX_mesa_INCLUDE_DIRS} "." "backends" "include")
file(GLOB sources *.cpp)
target_link_libraries(Example Gui glfw SDL2::SDL2 OpenGL::GL ${libEGL_mesa_LIBRARIES} )
target_compile_definitions(Example PUBLIC)